
#function to extract and slice a variable by the specified dimensions
var.list<-varnames
dat<-data.frame(YEAR=get.var.ncdf(out,'YEAR'))#extract year variable
dim.names<-dimnames
dim.codes<-sapply(out$dim,function(x) return(x$id))
dim.length<-dimlen
dim.df.codes<-data.frame(dim.names,dim.codes,dim.length)


shinyServer(function(input, output) {
  

  output$tsPlot<-renderPlot({
 
    variable.extraction<-function(out,variable){
      
      
      var1.name<-variable #get character string
      var1<-get.var.ncdf(out,var1.name)#read in data
      var1.dimlen<-dim(as.array(var1)) #length of each dimension
      var1<-as.array(var1) #convert to array
      var1.dims<-out$var[[match(var1.name,var.list)]]$dimids#dimension ids
      var1.ndims<-out$var[[match(var1.name,var.list)]]$ndims#number of dimensions
      var1.dimnames<-dim.names[match(var1.dims,dim.codes)]#names of dimensions
      
      #next block of code- need to name all dimensions in array
      dimnames.list<-list()
     
      if(var1.ndims==0)
      {
        dimnames.list[[1]]=1:length(var1)
        dimnames(var1)<-dimnames.list
      } else{
        
        for(i in 1:var1.ndims)
        {
          dimnames.list[[i]]=c(1:dim(as.array(var1))[i])
        }
        dimnames(var1)<-dimnames.list
      }
    
      if(var1.ndims==0)
      {
        var1.dimorder=1
      }
      var1.dimorder<-1:length(var1.dims)
      var1.dimorder<-var1.dimorder[order(var1.dims)]#permutation order for matrix
      var1.dimnames<-var1.dimnames[var1.dimorder]
      
      if(var1.ndims>1) 
      {
        var1<-aperm(var1,var1.dimorder)#put the dimensions in the order listed in dim.df
        if(var1.ndims==2)
        {
          dim.index<-input[[var1.dimnames[2]]]
          var1<-var1[,dim.index]
        } else if(var1.ndims==3)
        {   
          dim.index2<-input[[var1.dimnames[2]]]
          dim.index3<-input[[var1.dimnames[3]]]
          var1<-var1[,dim.index2,dim.index3]
        } else if(var1.ndims==4)
        {   
          dim.index2<-input[[var1.dimnames[2]]]
          dim.index3<-input[[var1.dimnames[3]]]
          dim.index4<-input[[var1.dimnames[4]]]
          var1<-var1[,dim.index2,dim.index3,dim.index4]
        } 
      }
      return(var1)
    }
    
    dat$var1<-variable.extraction(out,input$variable1)
    dat$var2<-variable.extraction(out,input$variable2)
    dat$var3<-variable.extraction(out,input$variable3)
    dat$var4<-variable.extraction(out,input$variable4)
    dat$var5<-variable.extraction(out,input$variable5)
    dat$var6<-variable.extraction(out,input$variable6)
    
    dat$YEAR[1:100]=dat$YEAR[1:101]-100#removing the weird spin up period.
    
    
    par(mfrow = c(6,1),
        oma = c(4,0,0,0) + 0.1,
        mar = c(.1,4,0,0) + 0.1)
    plot(var1~YEAR,data=dat,type='l',xlim=input$xrange,ylab=input$variable1,xlab='',xaxt='n',cex.lab=1.5)
    plot(var2~YEAR,data=dat,type='l',xlim=input$xrange,ylab=input$variable2,xlab='',xaxt='n',cex.lab=1.5)
    plot(var3~YEAR,data=dat,type='l',xlim=input$xrange,ylab=input$variable3,xlab='',xaxt='n',cex.lab=1.5)
    plot(var4~YEAR,data=dat,type='l',xlim=input$xrange,ylab=input$variable4,xlab='',xaxt='n',cex.lab=1.5)
    plot(var5~YEAR,data=dat,type='l',xlim=input$xrange,ylab=input$variable5,xlab='',xaxt='n',cex.lab=1.5)
    plot(var6~YEAR,data=dat,type='l',xlim=input$xrange,ylab=input$variable6,xlab='',cex.lab=1.5)
    title(xlab = "YEAR",cex.lab=1.5,
          outer = TRUE, line = 3,cex=1.5)
 })
  
  
  
  })

